# ~~~~~
# This config file is optional, but is an easy way to configure SortTV.
# Simply place it in the same directory as SortTV.
# ~~~~~

# ~~~~~
# Directories
# ~~~~~

# The new files to sort
# For example, set this to where completed downloads are stored
directory-to-sort:/home/cliffe/Files/Downloads/Unsorted

# Where to sort episodes into (dir that will contain dirs for each show)
# This directory will contain the structure (Show)/(Seasons)/(episodes)
directory-to-sort-into:/home/cliffe/Files/Media/TV

# OPTIONAL - where to put things that are not episodes
# If this is supplied then files and directories that SortTV does not believe are episodes will be moved here
# If not specified, non-episodes are not moved
non-episode-dir:/home/cliffe/Files/Downloads/Non-episodes

# ~~~~~
# Output and xbmc integration
# ~~~~~

# OPTIONAL - host:port for xbmc webserver, to automatically update library when new episodes arrive
# You probably want to set this to port 8080. Remember to enable the webserver within xbmc, and "set the content" of your TV directory in xbmc.
# If not specified, xbmc is not updated
xbmc-web-server:localhost:8089

# OPTIONAL - log to this file
# If not specified, output only goes to stdout (the screen)
log-file:/home/cliffe/sorttv.log

# OPTIONAL - Output verbosity. Set to TRUE to show messages describing the decision making process.
# TRUE/FALSE
# If not specified, FALSE
verbose:FALSE

# ~~~~~
# File renaming
# ~~~~~

# OPTIONAL - rename episodes to a new format when moving
# TRUE/FALSE
# If not specified, FALSE
rename-episodes:TRUE

# Optional - the format to use if renaming to a new format (as specified above)
# Hint: including the Episode Title as part of the name slows the process down a bit since titles are retrieved from thetvdb.com
# The format can be made up of:
# 	[SHOW_NAME]: "My Show"
# 	[EP1]: "S01E01"
# 	[EP2]: "1x1"
# 	[EP3]: "1x01"
# 	[EP_NAME1] " - Episode Title"
# 	[EP_NAME2] ".Episode Title"
# If not specified the format is, "[SHOW_NAME] - [EP1][EP_NAME1]"
#
# Examples: (remove the # from the renameformat line that follows the example filename you want)
# for "My Show S01E01 - Episode Title" (this is the default)
rename-format:[SHOW_NAME] - [EP1][EP_NAME1]
# for "My Show - S01E01"
#rename-format:[SHOW_NAME] - [EP1]
# for "My Show.S01E01.Episode Title"
#rename-format:[SHOW_NAME].[EP1][EP_NAME2]
# for "My Show - S01E01 - Episode Title"
#rename-format:[SHOW_NAME] - [EP1][EP_NAME1]
# for "My Show - 1x1 - Episode Title"
#rename-format:[SHOW_NAME] - [EP2][EP_NAME1]
# for "My Show - 1x01 - Episode Title"
#rename-format:[SHOW_NAME] - [EP3][EP_NAME1]

# OPTIONAL - renames episodes to replace spaces with dots
# TRUE/FALSE
# If not specified, FALSE
use-dots-instead-of-spaces:FALSE

# Substitute the titles of these shows
show-name-substitute:CSI-->CSI: Crime Scene Investigation
show-name-substitute:Sanctuary US-->Sanctuary

# ~~~~~
# Directory naming
# ~~~~~

# OPTIONAL - Season title (eg "Season " -> "Season 1",  "Series "->"Series 1", "Season."->"Season.1")
# Note: if you want a space it needs to be included
# If not specified, "Season "
season-title:Season 

# OPTIONAL - Season format padded to double digits (eg "Season 01" rather than "Season 1")
# TRUE/FALSE
# If not specified, FALSE
season-double-digits:FALSE

# ~~~~~
# Matching options
# ~~~~~

# OPTIONAL - Match type. LIBERAL assumes all files are episodes and tries to extract season and episode number any way possible.
# LIBERAL/NORMAL
# If not specified, NORMAL
match-type:NORMAL

# ~~~~~
# Behaviour
# ~~~~~

# OPTIONAL - Sort by moving or copying the file. If the file already exists because it was already copied it is silently skipped.
# the MOVE-AND-LEAVE-SYMLINK-BEHIND option may be handy if you want to continue to seed after sorting, this leaves a symlink in place of the newly moved file
# PLACE-SYMLINK does not move the original file, but places a symlink in the sort-to directory (probably not what you want).
# MOVE/COPY/MOVE-AND-LEAVE-SYMLINK-BEHIND/PLACE-SYMLINK
# If not specified, MOVE
sort-by:MOVE

# OPTIONAL - How to treat directories. 
# AS_FILES_TO_SORT - sorts directories, moving entire directories that represents an episode, also detects and moves directories of entire seasons
# RECURSIVELY_SORT_CONTENTS - doesn't move directories, just their contents, including subdirectories
# IGNORE - ignores directories
# AS_FILES_TO_SORT/RECURSIVELY_SORT_CONTENTS/IGNORE
# If not specified, RECURSIVELY_SORT_CONTENTS
treat-directories:RECURSIVELY_SORT_CONTENTS

# OPTIONAL - Only sort into show directories that already exist
# This may be helpful if you have multiple destination directories. Just set up all the other details in the conf file, 
#  and specify the destination directory when invoking the script. Only episodes that match existing directories in the destination will be moved.
# If this is false, then new directories are created for shows that dont have a directory.
# TRUE/FALSE
# If not specified, FALSE
require-show-directories-already-exist:FALSE

# OPTIONAL - Delete symlinks from the directory to sort while sorting.
# This may be helpful if you want to remove all the symlinks you left behind using --sort-by:MOVE-AND-LEAVE-SYMLINK-BEHIND
# You could schedule "perl sorttv.pl --remove-symlinks:TRUE" to remove these once a week/month
# If this option is enabled and used at the same time as --sort-by:MOVE-AND-LEAVE-SYMLINK-BEHIND, 
#  then only the previous links will be removed, and new ones may also be created
# TRUE/FALSE
# If not specified, FALSE
remove-symlinks:FALSE

# OPTIONAL - secondary config file, overwrites settings loaded so far (DO NOT PUT THE NAME OF THIS FILE!)
# If not specified, only the default config file is loaded (sorttv.config)
# read-config-file:

